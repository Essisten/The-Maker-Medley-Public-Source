<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprPlantsMikuRun</spriteName>
  <solid>0</solid>
  <visible>0</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>image_alpha = 2.6;
image_speed = 0;
glowLen = 20;
glowFrame = glowLen-1;
frozen = false;
subimg = 0;
subimgSpd = 0;
runBArmAng = 270;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (!frozen){
    if (image_angle &lt; 90){
        image_angle = min(90, image_angle + 3 + image_angle/10);
    }else{
        image_alpha -= 0.14;
        if (image_alpha &lt;= 0){
            instance_destroy();
        }
    }
    
    if (sprite_index == sprPlantsMikuRun){
        subimg += subimgSpd;
        /*if (floor(image_index) != 2 &amp;&amp; floor(image_index) != 3 &amp;&amp; floor(image_index) != 6){
            image_index = (image_index + 0.15) mod image_number;
        }*/
    }
    if (glowFrame &gt; 0){
        glowFrame --;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="13">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Shadow
_width = abs(26*dcos(image_angle)) + abs(30*dsin(image_angle));
_height = abs(30*dcos(image_angle)) + abs(26*dsin(image_angle));
draw_sprite_ext(sprPlantsShadow, 0, x-view_xview, bbox_bottom - 6, image_xscale*_width/33, image_yscale*0.6*_height/21, 0, c_white, image_alpha);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Main body
var _x = x, _y = y;
var _glowAlpha = 0, _index = 0;
if (glowFrame &gt; 0){
    _glowAlpha = scrPlantsGlow(glowFrame, glowLen);
}

if (sprite_index == sprPlantsMikuRun || sprite_index == sprPlantsMikuDance){
    var _peak = 6;
    _index = abs(((floor(subimg) + (_peak)) mod (2*_peak)) - _peak);
    _x += -18*dsin(image_angle);
    _y += +18*dsin(image_angle)/2;
    
    // draw back arm
    var _runBArmX = 0, _runBArmY = -9;
    /*
    runBArmX = runBodyX+(+0);
    runBArmY = runBodyY+(-9);
    */
    var _rot = scrChangeOriginScaled(0, 0, -_runBArmX, -_runBArmY, image_angle, image_xscale, image_yscale);
    var _ang = (runBArmAng-255);
    draw_sprite_ext(sprPlantsMikuRunBArm, 0, _x + _rot[0], _y + _rot[1], image_xscale, image_yscale, image_angle + _ang, c_white, 1)
    if (_glowAlpha &gt; 0){
        draw_sprite_ext(sprPlantsMikuRunBArm, 1, _x + _rot[0], _y + _rot[1], image_xscale, image_yscale, image_angle + _ang, c_white, _glowAlpha*image_alpha);
    }
}else if (sprite_index == sprPlantsMikuIdle){
    _index = floor(image_index) mod 10;
    _x += x-25*dsin(image_angle);
    _y += y+25*dsin(image_angle)/2;
}

draw_sprite_ext(sprite_index, _index, _x, _y, 1, 1, image_angle, c_white, image_alpha);
if (_glowAlpha &gt; 0){
    draw_sprite_ext(sprite_index, _index, _x, _y, 1, 1, image_angle, c_white, _glowAlpha*image_alpha);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_user(0);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
